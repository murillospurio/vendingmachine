#include <WiFi.h>
#include <WebServer.h>
#include <ArduinoJson.h>

// Dados da rede Wi-Fi
const char* ssid = "CENTRO _ALTOMOTIVO";
const char* password = "bemvindos";

// Inst√¢ncia do servidor na porta 80
WebServer server(80);

// Pinos utilizados
const int ledPin = 2;
const int pulsePin = 4;

// Vari√°veis
float creditBalance = 0.0;

void handleAPI() {
  // Verifica se h√° corpo na requisi√ß√£o
  if (!server.hasArg("plain")) {
    server.send(400, "application/json", "{\"status\":\"error\",\"message\":\"Corpo vazio\"}");
    return;
  }

  // L√™ e interpreta o JSON
  String body = server.arg("plain");
  StaticJsonDocument<200> doc;
  DeserializationError error = deserializeJson(doc, body);

  if (error) {
    server.send(400, "application/json", "{\"status\":\"error\",\"message\":\"JSON inv√°lido\"}");
    return;
  }

  // Extrai os dados do JSON
  String signal = doc["signal"];
  float valorPago = doc["valor_pago"];

  if (signal == "credito_disponivel") {
    creditBalance += valorPago;
    Serial.printf("üí∞ Valor pago: R$ %.2f\n", valorPago);
    Serial.printf("üí≥ Cr√©dito atual: R$ %.2f\n", creditBalance);

    int quantidadePulsos = int(valorPago);  // 1 pulso por real
    Serial.printf("üîÅ Gerando %d pulsos...\n", quantidadePulsos);

    for (int i = 0; i < quantidadePulsos; i++) {
      digitalWrite(pulsePin, LOW);   // Pulso negativo
      delay(100);                    // Dura√ß√£o do pulso
      digitalWrite(pulsePin, HIGH);  // Volta ao estado alto
      delay(100);                    // Pausa entre pulsos
    }

    server.send(200, "application/json", "{\"status\":\"success\",\"message\":\"Cr√©dito atualizado com pulsos\"}");
  } else {
    server.send(400, "application/json", "{\"status\":\"error\",\"message\":\"Sinal inv√°lido\"}");
  }
}

void setup() {
  Serial.begin(115200);

  pinMode(ledPin, OUTPUT);
  pinMode(pulsePin, OUTPUT);

  digitalWrite(ledPin, LOW);
  digitalWrite(pulsePin, HIGH);  // Pino inicia em n√≠vel alto (espera)

  // Conecta ao Wi-Fi
  WiFi.begin(ssid, password);
  Serial.println("üîå Conectando ao Wi-Fi...");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }

  Serial.println("\n‚úÖ Conectado ao Wi-Fi!");
  Serial.print("üì° IP do ESP32: ");
  Serial.println(WiFi.localIP());

  digitalWrite(ledPin, HIGH); // Acende LED indicando conex√£o

  // Configura a rota
  server.on("/api", HTTP_POST, handleAPI);
  server.begin();
  Serial.println("üöÄ Servidor iniciado!");
}

void loop() {
  server.handleClient();
}
